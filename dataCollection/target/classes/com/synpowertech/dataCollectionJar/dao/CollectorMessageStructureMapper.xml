<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.synpowertech.dataCollectionJar.dao.CollectorMessageStructureMapper">
  <resultMap id="BaseResultMap" type="com.synpowertech.dataCollectionJar.domain.CollectorMessageStructure">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="collector_id" jdbcType="INTEGER" property="collectorId" />
    <result column="collector_sn" jdbcType="VARCHAR" property="collectorSn" />
    <result column="data_model" jdbcType="INTEGER" property="dataModel" />
    <result column="device_id" jdbcType="INTEGER" property="deviceId" />
    <result column="table_name" jdbcType="VARCHAR" property="tableName" />
    <result column="parse_order" jdbcType="INTEGER" property="parseOrder" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="valid" jdbcType="CHAR" property="valid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, collector_id, collector_sn, data_model, device_id, table_name, parse_order, size, valid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collector_message_structure
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collector_message_structure
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.synpowertech.dataCollectionJar.domain.CollectorMessageStructure">
    insert into collector_message_structure (id, collector_id, collector_sn, data_model, 
      device_id, table_name, parse_order, 
      size, valid)
    values (#{id,jdbcType=INTEGER}, #{collectorId,jdbcType=INTEGER}, #{collectorSn,jdbcType=VARCHAR}, #{dataModel,jdbcType=INTEGER}, 
      #{deviceId,jdbcType=INTEGER}, #{tableName,jdbcType=VARCHAR}, #{parseOrder,jdbcType=INTEGER}, 
      #{size,jdbcType=VARCHAR}, #{valid,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.synpowertech.dataCollectionJar.domain.CollectorMessageStructure">
    insert into collector_message_structure
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="collectorId != null">
        collector_id,
      </if>
      <if test="collectorSn != null">
        collector_sn,
      </if>
      <if test="dataModel != null">
        data_model,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="tableName != null">
        table_name,
      </if>
      <if test="parseOrder != null">
        parse_order,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="collectorId != null">
        #{collectorId,jdbcType=INTEGER},
      </if>
      <if test="collectorSn != null">
        #{collectorSn,jdbcType=VARCHAR},
      </if>
      <if test="dataModel != null">
        #{dataModel,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="parseOrder != null">
        #{parseOrder,jdbcType=INTEGER},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.synpowertech.dataCollectionJar.domain.CollectorMessageStructure">
    update collector_message_structure
    <set>
      <if test="collectorId != null">
        collector_id = #{collectorId,jdbcType=INTEGER},
      </if>
      <if test="collectorSn != null">
        collector_sn = #{collectorSn,jdbcType=VARCHAR},
      </if>
      <if test="dataModel != null">
        data_model = #{dataModel,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="tableName != null">
        table_name = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="parseOrder != null">
        parse_order = #{parseOrder,jdbcType=INTEGER},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.synpowertech.dataCollectionJar.domain.CollectorMessageStructure">
    update collector_message_structure
    set collector_id = #{collectorId,jdbcType=INTEGER},
      collector_sn = #{collectorSn,jdbcType=VARCHAR},
      data_model = #{dataModel,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=INTEGER},
      table_name = #{tableName,jdbcType=VARCHAR},
      parse_order = #{parseOrder,jdbcType=INTEGER},
      size = #{size,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collector_message_structure
    where valid = '0'
  </select>

  <!-- 不判断valid,保证解析结算准确 -->
  <select id="selectFormerParseDev"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collector_message_structure
    where collector_sn = #{collectorSn,jdbcType=VARCHAR} and parse_order &lt; #{parseOrder,jdbcType=INTEGER}
  </select>
  
  <!-- 不判断valid,保证解析结算准确 -->
  <select id="selectByCollSn" parameterType="java.lang.String"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collector_message_structure 
    <!-- where collector_sn = #{collectorSn,jdbcType=VARCHAR} ORDER BY parse_order ASC -->
    RIGHT JOIN (SELECT max(id) mid FROM collector_message_structure 
    where collector_sn = #{collectorSn,jdbcType=VARCHAR} 
    GROUP BY parse_order) m 
    ON collector_message_structure.id = m.mid 
    ORDER BY parse_order ASC
  </select>
  
</mapper>