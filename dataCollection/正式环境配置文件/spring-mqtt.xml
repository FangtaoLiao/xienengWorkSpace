<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:int-mqtt="http://www.springframework.org/schema/integration/mqtt"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
        http://www.springframework.org/schema/integration/mqtt http://www.springframework.org/schema/integration/mqtt/spring-integration-mqtt-4.1.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">  
  
       
    <context:property-placeholder location="classpath:spring-mqtt.properties" ignore-unresolvable="true" />
  
    <bean id="clientFactory"  
        class="org.springframework.integration.mqtt.core.DefaultMqttPahoClientFactory">  
        <property name="userName" value="${Mqtt.username}" />  
        <property name="password" value="${Mqtt.password}" />  
        <property name="serverURIs" value="${Mqtt.host}">  
          <!--   <array>  
                <value>mqtt服务地址</value>  
            </array>   -->
        </property> 
     	<property name="cleanSession" value="${Mqtt.cleanSession}" /> 
        <property name="connectionTimeout" value="${Mqtt.timeout}" /> 
        <property name="keepAliveInterval" value="${Mqtt.aliveInterval}" />
    </bean>  
      
    <bean id="mqttHandler" class="org.springframework.integration.mqtt.outbound.MqttPahoMessageHandler">  
        <constructor-arg name="clientId" value="${Mqtt.clientId4producer}"></constructor-arg>  
        <constructor-arg name="clientFactory" ref="clientFactory"></constructor-arg>  
    </bean>

	<!-- 给发送信息的工具类静态变量注入属性 -->
	<bean id="mqttMessagePublisher" class="com.synpowertech.dataCollectionJar.initialization.MqttMessagePublisher" init-method="initMethod">
		<property name="handler4topicSetTime" ref="mqttHandler"></property>
		<property name="handler4topicYkYt" ref="mqttHandler"></property>
	</bean>
	
	
		
	<!-- <int-mqtt:outbound-channel-adapter id="withConverter"
	client-id="foo"  
	url="tcp://localhost:1883"  
	converter="myConverter"  
	client-factory="clientFactory"  
	default-qos="1"  
	default-retained="true"  
	default-topic="bar"  
	async="false"  
	async-events="false"  
	channel="target" />
	
	
	消息处理类  
	<int:service-activator id="messagePublisherService"  
	    input-channel="output" ref="mqttMessagePublisher" />  
	<int:channel id="output" /> -->
	
	
	
	<!-- 接收消息配置 -->
	  <!-- 消息适配器  url="tcp://localhost:1883"  -->  
    <int-mqtt:message-driven-channel-adapter  
        id="mqttInbound" client-id="${Mqtt.clientId4consumer}"  
        topics="${Mqtt.ycymyx},${Mqtt.ykytResult}"  
        qos="1,1"  
        client-factory="clientFactory"   
        auto-startup="true"  
        send-timeout="12"  	
        channel="input" />  
          
        <int:channel id="input" />  
  
	<!-- 消息处理类 -->  
	<int:service-activator id="messageRecievedService"  
	    input-channel="input" ref="mqttMessageConsumer" method="messageArrived" />  
	  
	<bean id="mqttMessageConsumer" class="com.synpowertech.dataCollectionJar.initialization.MqttMessageConsumer" />  
</beans>  